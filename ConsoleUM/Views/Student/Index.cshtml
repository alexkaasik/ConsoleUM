@model PaginatedList<ConsoleUM.Models.Student>

@{
    ViewData["Title"] = "Index";
}

<h2>Index</h2>

<p>
    <a asp-action="Create">Create new</a>
</p>

<form action="/" method="post">
    <div>
        <p>
            find my name: <input type="text" name="SearchString" value="@ViewData["CurrentFilter"]" />
            <input type="submit" value="Search" class="btn btn-default" />
            <a asp-action="Index">Back to full list</a>
        </p>
    </div>    
</form>

<table class="table">
    <thread>
        <tr>
            <th>
                <a asp-action="Index" asp-route-sortOrder="@ViewData["NameSortParm"]" asp-route-currentFildter="@ViewData["CurrentFilter"]"></a>
                @Html.DisplayNameFor(model => model.LastName)
            </th>
            <th>
                <a asp-action="Name" asp-route-sortOrder="@ViewData["NameSortParm"]" asp-route-currentFildter="@ViewData["CurrentFilter"]"></a>
                @Html.DisplayNameFor(model => model.FirstName)
            </th>
            <th>
                <a asp-action="Date" asp-route-sortOrder="@ViewData["NameSortParm"]" asp-route-currentFildter="@ViewData["CurrentFilter"]"></a>
                @Html.DisplayNameFor(model => model.EnrollmentDate)
            </th>
            <th></th>
        </tr>
    </thread>
    <thead>
        <tbody>
            @foreach (var item in Model)
            {
                <td>
                    @Html.DisplayNameFor(modelItem => item.LastName)
                </td>
                <td>
                    @Html.DisplayNameFor(modelItem => item.FirstName)
                </td>
                <td>
                    @Html.DisplayNameFor(modelItem => item.EnrollmentDate)
                </td>
                <td>
                    <a asp-action="Edit" asp-route-id="@item.Id">Edit</a>
                    <a asp-action="Detail" asp-route-id="@item.Id">Detail</a>
                    <a asp-action="Delete" asp-route-id="@item.Id">Delete</a>
                 </td>
            }
        </tbody>
    </thead>
</table>




@{
    var prevDisabled = !Model.HasPreviousPage ? "disabled" : "";
    var nextDisabled = !Model.HasNextPage ? "disabled" : "";
}

<a asp-action="Index"
   asp-route-sortOrder="@ViewData["CurrentSort"]"
   asp-route-pageNumber="@(Model.PageIndex - 1)"
   asp-route-currentFilter="@ViewData["CurrentFilter"]"
   class="btn btn-default @prevDisabled">
    Previous
</a>
<a asp-action="Index"
   asp-route-sortOrder="@ViewData["CurrentSort"]"
   asp-route-pageNumber="@(Model.PageIndex + 1)"
   asp-route-currentFilter="@ViewData["CurrentFilter"]"
   class="btn btn-default @nextDisabled">
    Next
</a>